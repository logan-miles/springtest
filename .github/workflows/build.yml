name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing a change
on:
  push:
    branches: ["main"]
  workflow_dispatch: null
permissions:
  id-token: write
  contents: read
  checks: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 1.11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build
      run: mvn --batch-mode -DskipTests -f data/pom.xml package
    - name: Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true -f data/pom.xml test
    - name: Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: data/target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true
    - name: Coverage
      uses: 'actions/upload-artifact@v2'
      with:
        name: jacoco-report
        path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.2
      with: 
        paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80
        title: Code Coverage
    - name: "Save Coverage To Environment Variable"
      run: |
        echo "TOTAL_COVERAGE=${{ steps.jacoco.outputs.coverage-overall }}" >> $GITHUB_ENV
        echo "CHANGED_FILES_COVERAGE=${{ steps.jacoco.outputs.coverage-changed-files }}" >> $GITHUB_ENV
    - name: Print & Check Coverage Info
      run: |
        import os
        import sys
        print("Total Coverage: " + str(os.environ["TOTAL_COVERAGE"]))
        print("Changed Files Coverage: " + str(os.environ["CHANGED_FILES_COVERAGE"]))
        if float(os.environ["TOTAL_COVERAGE"]) < 80 or float(os.environ["CHANGED_FILES_COVERAGE"]) < 80:
          print("Insufficient Coverage!")
          sys.exit(-1) # Cause Status Check Failure due to noncompliant coverage
        sys.exit(0)
      shell: python

